////////////////////////////////////////////////////////////////////////////////
//
//  System Name : ALFA Configuration File
//     Filename : acf_mod_onheartbeat.nss
//    $Revision:: 197        $ current version of the file
//        $Date:: 2006-12-23#$ date the file was created or modified
//       Author : Ronan
//
//  Local Variable Prefix = None
//
//  Description
//  This script calls the module's OnHeartbeat event, and any custom code added
//  by this server. It is usually used to set up server-specific options.
//  This file should NOT be overwriten in ACR updates so as to preserve any of
//  the server's customized code they may have added.
//
//  Revision History
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "acr_mod_events_i"
#include "010_weather_i"
#include "010_location_i"


////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

const float HB_DELAY  = 0.1;

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void _hb_weather();
void _hb_loc_players();
void _hb_cursed_items();

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void _hb_weather()
{
	process_weather();
}

void _hb_loc_players()
{
	loc_update_players();
}

void _hb_cursed_items()
{
	object bag,o;
	int i;
	int num_ticks = 50; // 1 per every 5 min
	string str;
	
	SetGlobalInt("cursed_timer",GetGlobalInt("cursed_timer")+1);

	if (GetGlobalInt("cursed_timer") <= GetGlobalInt("cursed_threshold"))
		return;
		
	if (GetGlobalInt("cursed_threshold") == 0) {
		SetGlobalInt("cursed_threshold", num_ticks);
		return;
	}
	
	SetGlobalInt("cursed_threshold", num_ticks);
	SetGlobalInt("cursed_timer",0);
	
	
	for (i=0; ; ++i) {
		bag = GetObjectByTag("010_it_magic_cursed_boh",i);
		
		if (!GetIsObjectValid(bag))
			break;
			
		o = GetFirstItemInInventory(bag);
		
		while (GetIsObjectValid(o)) {
			str = GetTag(o) + "(" + GetName(o) + ") destroyed in cursed bag of holding";
			DestroyObject(o);
			o = GetNextItemInInventory(bag);
			SendMessageToPC(GetItemPossessor(bag),"There is a puff of smoke from the bag of holding.");
			SendMessageToAllDMs(str);
			WriteTimestampedLogEntry(str);
		}
	}
}

void main()
{
	ACR_ModuleOnHeartbeat();
	
	DelayCommand(HB_DELAY, _hb_loc_players());
	DelayCommand(HB_DELAY*2, _hb_weather());
	DelayCommand(HB_DELAY*3, _hb_cursed_items());
}